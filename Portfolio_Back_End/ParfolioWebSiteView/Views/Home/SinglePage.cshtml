@model BlogVM
@inject Microsoft.AspNetCore.Identity.UserManager<User> userManager;
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@{
    User user = null;
    if (User.Identity.IsAuthenticated)
    {
        user = userManager.Users.FirstOrDefault(x => x.UserName == User.Identity.Name);
    }

    ViewData["Title"] = "Single Page";
    string namesss = "@sweetalert2";
}


@section header{

    <style>
        .parent-coment:hover {
            color: #0062d3 !important;
            transition: all 0.3s ease-in;
        }
    </style>
    <link href="//cdn.jsdelivr.net/npm/@namesss/theme-dark@4/dark.css" rel="stylesheet">
    <link rel="stylesheet" href="~/Admin/assets/css/themify-icons.css">
}
<input type="hidden" id="BlogId" value="@Model.Blog.Id" />
<input type="hidden" id="UserIdentityName" value="@User.Identity.Name" />
<input type="hidden" id="UserIdentityIsAuthenticated" value="@User.Identity.IsAuthenticated.ToString()" />
<div class="hero hero-single route bg-image" style="background-image: url(/img/overlay-bg.jpg)">
    <div class="overlay-mf"></div>
    <div class="hero-content display-table">
        <div class="table-cell">
            <div class="container">
                <h2 class="hero-title mb-4">@Model.Blog.User.UserName Blog Details</h2>
                <ol class="breadcrumb d-flex justify-content-center">
                    <li class="breadcrumb-item">
                        <a href="/">Home</a>
                    </li>
                    <li class="breadcrumb-item">
                        <a href="#">@Model.Blog.BlogCategory.Name</a>
                    </li>
                    <li class="breadcrumb-item active">@Model.Blog.Title</li>
                </ol>
            </div>
        </div>
    </div>
</div>


<main id="main">

    <!-- ======= Blog Single Section ======= -->
    <section class="blog-wrapper sect-pt4" id="blog">
        <div class="container">
            <div class="row">
                <div class="col-md-8">
                    <div class="post-box">
                        <div class="post-thumb d-flex justify-content-center">
                            <img src="~/img/Blog/@Model.Blog.Image" class="img-fluid" alt="">
                        </div>
                        <div class="post-meta">
                            <h1 class="article-title">@Model.Blog.Title</h1>
                            <ul>
                                <li>
                                    <span class="bi bi-person"></span>
                                    <a href="/Home/Index/@Model.Blog.User.UserName">@Model.Blog.User.FullName</a>
                                </li>
                                <li>
                                    <span class="bi bi-tag"></span>
                                    <a href="#">@Model.Blog.BlogCategory.Name</a>
                                </li>
                                <li>
                                    <span class="bi bi-chat-text"></span>
                                    <a href="#comment">@Model.CommentCount</a>
                                </li>
                            </ul>
                        </div>
                        <div class="article-content lead-add">
                            @Html.Raw(Model.Blog.BlogDetails.Description)
                        </div>
                    </div>
                    <div id="comment" class="box-comments">
                        <div class="title-box-2">
                            <h4 class="title-comments title-left">Comments (@Model.CommentCount)</h4>
                        </div>
                        <ul class="list-comments">
                            @if (!User.Identity.IsAuthenticated)
                            {
                                @if (Model.Commet != null)
                                {
                                    <li id="@Model.Commet.HtmlId">
                                        <div class="comment-avatar">
                                            <img src="~/img/Profile/@Model.Commet.User.Image" alt="">
                                        </div>
                                        <div class="comment-details w-100">
                                            <h4 class="comment-author">@Model.Commet.User.UserName</h4>
                                            <span>@Model.Commet.Date.ToShortDateString()</span>
                                            <p>
                                                @Model.Commet.Comment
                                            </p>

                                            <a class='replay' data-add='0' data-userid='0' data-blog="0" data-commentid='@Model.Commet.Id' href='#'>Reply</a>
                                        </div>
                                    </li>


                                    foreach (var commentChild in Model.Commet.CommentChildren)
                                    {
                                        <li id="@commentChild.HtmlId" class="comment-children">
                                            <div class="comment-avatar">
                                                <img src="~/img/Profile/@commentChild.User.Image" alt="">
                                            </div>
                                            <div class="comment-details w-100">
                                                <h4 class="comment-author parent-coment" data-parent="comment@(commentChild.ParentId)">@commentChild.User.UserName => @Model.Commet.User.UserName</h4>
                                                <span>@commentChild.Date.ToShortDateString()</span>
                                                <p>
                                                    @commentChild.Comment
                                                </p>
                                                <a class='replay' data-add='0' data-userid='0' data-blog="0" data-commentid='@commentChild.Id' href='#'>Reply</a>
                                            </div>
                                            @if (commentChild.IsChild)
                                            {
                                                <button class="btn w-100 btn-child my-2 btn-light text-center" data-id="@commentChild.Id" data-index="1">See Answers</button>
                                            }
                                        </li>
                                    }
                                }
                            }
                            else
                            {
                                if (Model.Commet != null)
                                {
                                    <li id="@Model.Commet.HtmlId">
                                        <div class="comment-avatar">
                                            <img src="~/img/Profile/@Model.Commet.User.Image" alt="">
                                        </div>
                                        <div class="comment-details w-100">
                                            <h4 class="comment-author">@Model.Commet.User.UserName</h4>
                                            <span>@Model.Commet.Date.ToShortDateString()</span>
                                            <p>
                                                @Model.Commet.Comment
                                            </p>
                                            <div class="icon-more">
                                                <button class="btn bg-transparent border border-1 rounded-circle more-btn" type="button">
                                                    <i style="font-size:1.2rem;" class="ti-more-alt"></i>
                                                </button>

                                                <div class="dropdown-menu p-1" aria-labelledby="icon-more">
                                                    @if (Model.Commet.User.UserName == User.Identity.Name)
                                                    {
                                                        <a class="dropdown-item btn-update text-center" href="#" data-toggle="modal" data-target="#UpdatCommentModalCenter" data-id="@Model.Commet.Id"><i class="ti-pencil"></i> Edit</a>
                                                        <a class="dropdown-item text-danger text-center delete-btn" href="/Comment/Delete/@Model.Commet.Id"><i class="ti-trash"></i>Delete</a>
                                                    }
                                                    else
                                                    {
                                                        <a class="dropdown-item text-center" href="#"> <i class="ti-info"></i>Xeber</a>
                                                    }

                                                </div>
                                            </div>
                                            <a class='replay' data-add='0' data-blog="@Model.Blog.Id" data-userid='@user.Id' data-commentid='@Model.Commet.Id' href='#'>Reply</a>
                                        </div>
                                    </li>

                                    foreach (var commentChildren in Model.Commet.CommentChildren)
                                    {
                                        <li id="@commentChildren.HtmlId" class="comment-children">
                                            <div class="comment-avatar">
                                                <img src="~/img/Profile/@commentChildren.User.Image" alt="">
                                            </div>
                                            <div class="comment-details w-100">
                                                <h4 class="comment-author parent-coment" data-parent="comment@(commentChildren.ParentId)">@commentChildren.User.UserName => @commentChildren.User.UserName</h4>
                                                <span>@commentChildren.Date.ToShortDateString()</span>
                                                <p>
                                                    @commentChildren.Comment
                                                </p>
                                                <div class="icon-more">
                                                    <button class="btn bg-transparent border border-1 rounded-circle more-btn" type="button">
                                                        <i style="font-size:1.2rem;" class="ti-more-alt"></i>
                                                    </button>

                                                    <div class="dropdown-menu p-1" aria-labelledby="icon-more">
                                                        @if (commentChildren.User.UserName == User.Identity.Name)
                                                        {
                                                            <a class="dropdown-item btn-update text-center" href="#" data-toggle="modal" data-target="#UpdatCommentModalCenter" data-id="@commentChildren.Id"><i class="ti-pencil"></i> Edit</a>
                                                            <a class="dropdown-item text-danger text-center delete-btn" href="/Comment/Delete/@commentChildren.Id"><i class="ti-trash"></i>Delete</a>
                                                        }
                                                        else
                                                        {
                                                            <a class="dropdown-item text-center" href="#"> <i class="ti-info"></i>Xeber</a>
                                                        }

                                                    </div>
                                                </div>
                                                <a class='replay' data-add='0' data-blog="@Model.Blog.Id" data-userid='@user.Id' data-commentid='@commentChildren.Id' href='#'>Reply</a>
                                            </div>
                                            @if (commentChildren.IsChild)
                                            {
                                                <button class="btn w-100 btn-child my-2 btn-light text-center" data-id="@commentChildren.Id" data-index="1">See Answers</button>
                                            }
                                        </li>
                                    }
                                }
                            }
                        </ul>
                        @if (Model.CommentCount > 1)
                        {
                            <button class="btn  w-100 my-2 showMore btn-light text-center" data-index="1">See More Comment</button>
                        }

                    </div>
                    <div class="form-comments">
                        <div class="title-box-2">
                            <h3 class="title-left">
                                Leave a Reply
                            </h3>
                        </div>

                        @if (User.Identity.IsAuthenticated)
                        {
                            <form id="comment-leave" class="form-mf " action="/Assistant/Comment" method="post">
                                <div class="row">
                                    <div class="mb-3">
                                        <div class="form-group">
                                            <textarea id="textMessage" class="form-control input-mf" placeholder="Comment *" name="message" cols="45" rows="8" required></textarea>
                                            <input type="hidden" name="userId" value="@user.Id">
                                            <input type="hidden" name="blogId" value="@Model.Blog.Id">
                                        </div>
                                    </div>
                                    <span class="text-danger mb-3 danger"></span>
                                    <div class="col-md-12">
                                        <button type="submit" class="button button-a button-big button-rouded">Comment</button>
                                    </div>
                                </div>
                            </form>
                        }
                        else
                        {
                            <form id="comment-leave" class="form-mf">
                                <div class="row">
                                    <div class="mb-3">
                                        <div class="form-group">
                                            <textarea id="textMessage" class="form-control input-mf" placeholder="Comment *" name="message" cols="45" rows="8" required></textarea>
                                            <input type="hidden" name="userId" value="0">
                                            <input type="hidden" name="commetId" value="0">
                                        </div>
                                    </div>
                                    <span class="text-danger mb-3 danger"></span>
                                    <div class="col-md-12">
                                        <button type="submit" class="button button-a button-big button-rouded">Comment</button>
                                    </div>
                                </div>
                            </form>
                        }


                    </div>
                </div>
                <div class="col-md-4">
                    <div class="widget-sidebar sidebar-search">
                        <h5 class="sidebar-title">Search in @Model.Blog.User.UserName</h5>
                        <div class="sidebar-content">
                            <form method="post" asp-action="Search" asp-controller="Assistant">
                                <div class="input-group">
                                    <input type="text" class="form-control" name="info" placeholder="Search for..." aria-label="Search for...">
                                    <input type="checkbox"
                                           style="width:0;height:0;visibility:hidden;"
                                           name="isAll"
                                           value="@false.ToString()" />
                                    <input type="hidden" name="userName" value="@Model.Blog.User.UserName" />
                                    <span class="input-group-btn">
                                        <button class="btn btn-secondary btn-search" type="submit">
                                            <span class="bi bi-search"></span>
                                        </button>
                                    </span>
                                </div>
                            </form>
                        </div>
                    </div>
                    <div class="widget-sidebar">
                        <h5 class="sidebar-title">Recent Post in @Model.Blog.User.UserName</h5>
                        <div class="sidebar-content">
                            <ul class="list-sidebar">

                                @foreach (var item in Model.Blogs.Take(3))
                                {
                                    <li>
                                        <a href="/Home/SinglePage/@item.Id">
                                            @if (item.Title.Length > 50)
                                            {
                                                <span>
                                                    @item.Title.Substring(0, 50) ...
                                                </span>
                                            }
                                            else
                                            {
                                                <span>
                                                    @item.Title
                                                </span>
                                            }

                                        </a>
                                    </li>
                                }
                            </ul>
                        </div>
                    </div>
                    <div class="widget-sidebar">
                        <h5 class="sidebar-title">Archives in @Model.Blog.User.UserName</h5>
                        <div class="sidebar-content">

                            @if (Model.Blogs.Count > 3)
                            {
                                <ul class="list-sidebar">
                                    @for (int i = 3; i < Model.Blogs.Count; i++)
                                    {
                                        <li>
                                            <a href="/Home/SinglePage/@Model.Blogs[i].Id">
                                                @if (Model.Blogs[i].Title.Length > 50)
                                                {
                                                    <span>
                                                        @Model.Blogs[i].Title.Substring(0, 50) ...
                                                    </span>
                                                }
                                                else
                                                {
                                                    <span>
                                                        @Model.Blogs[i].Title
                                                    </span>
                                                }

                                            </a>
                                        </li>
                                    }
                                </ul>
                                <a class="btn mt-3 d-block btn-primary" href="/Assistant/SeeArchives/@Model.Blog.Id">See All</a>
                            }
                            else
                            {
                                <ul class="list-sidebar">
                                    <li>
                                        Not yet Archived
                                    </li>
                                </ul>
                            }

                        </div>
                    </div>
                    <div class="widget-sidebar widget-tags">
                        <h5 class="sidebar-title">Tags</h5>
                        <div class="sidebar-content">
                            <ul>
                                @foreach (var item in Model.Tags)
                                {
                                    <li>
                                        <a href="/Assistant/TagBlogs/@item.Id">@item.Name</a>
                                    </li>
                                }
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section><!-- End Blog Single Section -->

</main><!-- End #main -->

<div class="modal fade" id="UpdatCommentModalCenter" tabindex="-1" role="dialog" aria-labelledby="UpdatCommentModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4>
                    Update Commet
                </h4>
            </div>
            <div class="modal-body text-center">
                <form method="post" id="updateForm">
                    <input type="hidden" id="UpdateCommentId">
                    @if (user != null)
                    {
                        <input type="hidden" id="editUserId" value="@user.Id">
                    }
                    else
                    {
                        <input type="hidden" id="editUserId" value="">
                    }
                    <input type="hidden" id="editBlogDetail" value="@Model.Blog.Id">
                    <div class="form-group">
                        <textarea id="updateTextMessage" class="form-control input-mf" placeholder="Comment *" name="message" cols="45" rows="8" required></textarea>
                        <div id="eroor" class="text-danger my-2"></div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button form="updateForm" type="submit" class="btn btn-primary">Save changes</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>


@section script{
    <script src="//cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.js"></script>

    <script>
        $(document).ready(function () {
            $(".lead-add").each(function () {
                $(this).children("p").addClass("lead")
            })
        })
    </script>

    <script src="~/js/blog.js"></script>
    @* Leave Commet *@
    <script>
        $(document).ready(function () {
            $(document).on('submit', '#comment-leave', (e) => {
                e.preventDefault();
                const div = e.target.children[0].children[0].children[0]
                let Comment = div.children[0].value.trim()
                let UserId = div.children[1].value
                let BlogDetailsId = div.children[2].value
                let errorText = document.querySelector(".danger")

                if (!Comment || Comment == undefined || Comment == "" || Comment.length == 0) {
                    e.preventDefault()
                    errorText.innerHTML = "Please Comment Add"
                    return;
                }

                if (Comment.length < 3) {
                    e.preventDefault()
                    errorText.innerHTML = "Mimum Comment Character 2"
                    return;
                }

                if (UserId == 0) {
                    e.preventDefault()
                    errorText.innerHTML = "Please Sign In Or Sign Up"
                    return;
                }

                Swal.fire({
                    title: 'Give me a second.',
                    text: '"',
                    imageUrl: 'https://media.giphy.com/media/xTkcEQACH24SMPxIQg/giphy.gif',
                    imageWidth: 400,
                    imageHeight: 350,
                    imageAlt: 'Loading',
                })

                $.ajax({
                    url: '/Comment/Create',
                    headers: {
                        "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val()
                    },
                    type: 'POST',
                    data: { UserId: UserId, Comment: Comment, BlogDetailsId: BlogDetailsId },
                    success: (response) => {
                        if (response.hasOwnProperty('status') && response.status === 201) {
                            // Messange Success
                            Swal.fire(
                                'Messange Send',
                                '',
                                'success'
                            )
                            // Reload
                            setTimeout(() => {
                                location.href = `/Home/SinglePage/${BlogDetailsId}`;

                            }, 2000)

                        } else if (response.status == 400) {
                            Swal.fire(
                                'This Tags Already Added',
                                '',
                                'error'
                            )
                        } else {
                            Swal.fire(
                                'Not Added',
                                '',
                                'error'
                            )
                        }
                    }
                })
            })
        })
    </script>


    @* Child Comment *@
    <script>
        // Vaildation and Send Here
        // Here Send Ajax
        function SendComment(Comment, UserId, ParentId, BlogDetailsId) {
            $(document).ready(() => {
                Swal.fire({
                    title: 'Give me a second.',
                    text: '"',
                    imageUrl: 'https://media.giphy.com/media/xTkcEQACH24SMPxIQg/giphy.gif',
                    imageWidth: 400,
                    imageHeight: 350,
                    imageAlt: 'Loading',
                })
                $.ajax({
                    url: '/Comment/Create',
                    headers: {
                        "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val()
                    },
                    type: 'POST',
                    data: { UserId: UserId, Comment: Comment, BlogDetailsId: BlogDetailsId, ParentId: ParentId },
                    success: (response) => {
                        if (response.hasOwnProperty('status') && response.status === 201) {
                            // Messange Success
                            Swal.fire(
                                'Messange Send',
                                '',
                                'success'
                            )
                            // Reload
                            setTimeout(() => {
                                location.reload()

                            }, 2000)
                        } else {
                            Swal.fire(
                                'Not Added',
                                '',
                                'error'
                            )
                        }
                    }
                })

            })
        }

    </script>

    @* Comment Edit Get *@

    <script>
        $(document).ready(function () {
            $(document).on('click', '.btn-update', (e) => {
                e.preventDefault();
                let updateCommentId = $(e.currentTarget).attr("data-id")

                if (updateCommentId == null) {
                    return;
                }

                let alerWait = Swal.fire({
                    title: 'Give me a second.',
                    text: '"',
                    imageUrl: 'https://media.giphy.com/media/xTkcEQACH24SMPxIQg/giphy.gif',
                    imageWidth: 400,
                    imageHeight: 350,
                    imageAlt: 'Loading',
                })

                $.ajax({
                    url: `/Comment/Update/${updateCommentId}`,
                    type: 'GET',
                    success: (response) => {
                        if (response.hasOwnProperty('status') && response.status === 404) {
                            alerWait.close()
                            Swal.fire(
                                'Not Find Concat Onlie Link',
                                '',
                                'error'
                            )
                        } else {
                            $("#UpdateCommentId").val(updateCommentId)
                            $("#updateTextMessage").val(response.comment)
                            alerWait.close()
                        }
                    }
                });
                //console.log(button)

            })
        })
    </script>


    @* Comment Edit POST *@

    <script>
        $(document).ready(function () {
            $(document).on('submit', '#updateForm', (e) => {
                e.preventDefault();

                let Comment = $("#updateTextMessage").val().trim()
                let UserId = $("#editUserId").val().trim()
                let CommentId = $("#UpdateCommentId").val().trim()
                let BlogDetailsId = $("#editBlogDetail").val()
                let errorText = $("#eroor")

                if (!Comment || Comment == undefined || Comment == "" || Comment.length == 0) {
                    e.preventDefault()
                    errorText.text("Please Comment Add")
                    return;
                }

                if (Comment.length < 3) {
                    e.preventDefault()
                    errorText.text("Mimum Comment Character 2")
                    return;
                }

                if (UserId == 0) {
                    e.preventDefault()
                    errorText.text("Please Sign In Or Sign Up")
                    return;
                }

                Swal.fire({
                    title: 'Give me a second.',
                    text: '"',
                    imageUrl: 'https://media.giphy.com/media/xTkcEQACH24SMPxIQg/giphy.gif',
                    imageWidth: 400,
                    imageHeight: 350,
                    imageAlt: 'Loading',
                })

                $.ajax({
                    url: '/Comment/Update',
                    headers: {
                        "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val()
                    },
                    type: 'POST',
                    data: { UserId: UserId, Comment: Comment, Id: CommentId },
                    success: (response) => {
                        if (response.hasOwnProperty('status') && response.status === 201) {
                            // Messange Success
                            Swal.fire(
                                'Comment Updated',
                                '',
                                'success'
                            )
                            // Reload
                            setTimeout(() => {
                                location.reload()

                            }, 2000)
                        }
                        else {
                            Swal.fire(
                                'Comment Not Changed Added',
                                '',
                                'error'
                            )
                        }
                    }
                })
            })
        })
    </script>

    @*Comment Delete*@

    <script>
        $(document).ready(function () {
            $(document).on('click', '.delete-btn', function (e) {
                e.preventDefault();
                let url = $(this).attr("href");
                var __RequestVerificationToken = $("input[name='__RequestVerificationToken']").val();
                Swal.fire({
                    title: 'Are You Sure Delete?',
                    text: "Unable to return after deletion!",
                    type: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Delete',
                    cancelButtonText: 'Cancel'
                }).then((result) => {
                    if (result.value) {
                        $.ajax({
                            url: url,
                            type: "get",
                            beforeSend: function (request) {
                                request.setRequestHeader('RequestVerificationToken', $("input[name='__RequestVerificationToken']").val());
                            },
                            dataType: "json",
                            success: function (response) {
                                if (response.hasOwnProperty('status') && response.status === 202) {
                                    Swal.fire(
                                        'Deleted!',
                                        '',
                                        'success'
                                    )
                                    setTimeout(() => {
                                        location.reload()
                                    }, 2000)
                                }
                                else {
                                    Swal.fire(
                                        'Don"t Deleted',
                                        '',
                                        'error'
                                    )
                                }
                            }
                        });
                    }
                })
            });
        })
    </script>

    @* Comment More GET *@

    <script>

        $(document).ready(function (e) {

            $(".showMore").click(function () {
                let showMore = this
                let BlogId = $("#BlogId").val()
                let CommentSectionIndexHtml = $(showMore)
                let CommentSectionIndex = CommentSectionIndexHtml.attr("data-index")
                let alertWait = Swal.fire({
                    title: 'Give me a second.',
                    text: '"',
                    imageUrl: 'https://media.giphy.com/media/xTkcEQACH24SMPxIQg/giphy.gif',
                    imageWidth: 400,
                    imageHeight: 350,
                    imageAlt: 'Loading',
                })

                $.ajax({
                    url: `/Comment/GetMoreComment`,
                    data: { blogId: BlogId, commentSectionIndex: CommentSectionIndex },
                    type: 'GET',
                    success: (response) => {
                        if (response.hasOwnProperty('status') && response.status === 404) {
                            alertWait.close()
                            Swal.fire(
                                'Max Messenge Show',
                                '',
                                'error'
                            )
                        } else {

                            if (response.length != 5) {
                                showMore.style.display = "none"
                            } else {
                                CommentSectionIndexHtml.attr("data-index", new Number(CommentSectionIndex) + 1)
                            }
                            alertWait.close()
                            WriteComment(response, $("#editUserId").val().trim(), $("#UserIdentityName").val().trim())
                        }
                    }
                });
            })
        })
    </script>


    @* Comment More Write Html Funcition *@
    <script>
        function WriteComment(conments, userId, userName) {

            userName = new String(userName).trim();
            let commentsHtmlArray = new Array()
            if (userName == null || userName.length == 0) {
                conments.forEach(function (e) {
                    let li = document.createElement("li")
                    li.setAttribute('id', e.htmlId);
                    let Edate = new Date(e.date)
                    let html =
                        `
                                <div class="comment-avatar">
                                    <img src="~/img/Profile/${e.image}" alt="">
                                </div>
                                <div class="comment-details w-100">
                                    <h4 class="comment-author">${e.userName}</h4>
                                    <span>${Edate.getDate()}/${Edate.getMonth()}/${Edate.getFullYear()}</span>

                                    <p>
                                        ${e.comment}
                                    </p>
                                    <a class='replay' data-add='0' data-userid='' data-blog="0" data-commentid='${e.id}' href='#'>Reply</a>
                                </div>
                        `
                    if (e.isChild) {
                        html = html + `<button data-index="1"  data-id="${e.id}" class="btn btn-child  w-100 my-2 btn-light text-center">See Answers</button>`
                    }

                    li.innerHTML = html
                    let btnReplay = li.children[1].children[3]
                    btnReplay.addEventListener('click', ReplayComent)

                    commentsHtmlArray.push(li)
                })
            } else {

                conments.forEach(function (e) {
                    let li = document.createElement("li")
                    li.setAttribute('id', e.htmlId);
                    let Edate = new Date(e.date)
                    html =
                        `

                                        <div class="comment-avatar">
                                            <img src="~/img/Profile/${e.image}" alt="">
                                        </div>
                                        <div class="comment-details w-100">
                                            <h4 class="comment-author">${e.userName}</h4>
                                            <span>${Edate.getDate()}/${Edate.getMonth()}/${Edate.getFullYear()}</span>
                                            <p>
                                                ${e.comment}
                                            </p>
                                            <div class="icon-more">
                                                <button class="btn bg-transparent border border-1 rounded-circle more-btn" type="button">
                                                    <i style="font-size:1.2rem;" class="ti-more-alt"></i>
                                                </button>

                                                <div class="dropdown-menu p-1" aria-labelledby="icon-more">
                            `

                    if (e.userName == userName) {
                        html = html + ` <a class="dropdown-item btn-update text-center" href="#" data-toggle="modal" data-target="#UpdatCommentModalCenter" data-id=" ${e.id}"><i class="ti-pencil"></i> Edit</a>
                                                    <a class="dropdown-item text-danger text-center delete-btn" href="/Comment/Delete/${e.id}"><i class="ti-trash"></i>Delete</a>`
                    }
                    else {
                        html = html + ` <a class="dropdown-item text-center" href="#"> <i class="ti-info"></i>Xeber</a>`
                    }

                    html = html + `</div>
                                            </div>
                                            <a class='replay' data-add='0' data-blog="${e.blogDetailsId}" data-userid='${userId}' data-commentid='${e.id}' href='#'>Reply</a>
                                        </div>



                            `
                    if (e.isChild) {
                        html = html + `<button data-index="1" data-id="${e.id}" class="btn btn-child w-100 my-2 btn-light text-center">See Answers</button>`
                    }

                    li.innerHTML = html
                    let btnMore = li.children[1].children[3].children[0]
                    let btnReplay = li.children[1].children[4]
                    // Replay Comment Event Add
                    btnReplay.addEventListener('click', ReplayComent)
                    // Commentent Event Add
                    btnMore.addEventListener("click", CommentCompanentEventFunction)

                    commentsHtmlArray.push(li)
                })

            }
            commentsHtmlArray.forEach(function (elem) {
                document.querySelector(".list-comments").appendChild(elem)
            })
        }

    </script>


    @* Comment Companent Delete | Update | Xeber *@
    <script>
        function CommentElemet() {
            $(".more-btn").each(function (e) {
                let element = this
                $(this).click(function () {
                    $(element.nextElementSibling).toggle("show");
                })
            })
        }
        CommentElemet()
    </script>

    @* Comment Companent Event *@
    <script>
        function CommentCompanentEventFunction(e) {
            let element = e.currentTarget
            $(element.nextElementSibling).toggle("show");
        }
    </script>


    @* Comment Child Ajax | GET  *@
    <script>
        $(document).ready(function (e) {

            $(document).on('click', '.btn-child', (e) => {

                // Data Selection Section
                let showMoreAnswer = e.currentTarget
                let parentLi = showMoreAnswer.parentElement
                let parentId = $(showMoreAnswer).attr("data-id")
                let index = new Number($(showMoreAnswer).attr("data-index"))

                let alertWait = Swal.fire({
                    title: 'Give me a second.',
                    text: '"',
                    imageUrl: 'https://media.giphy.com/media/xTkcEQACH24SMPxIQg/giphy.gif',
                    imageWidth: 400,
                    imageHeight: 350,
                    imageAlt: 'Loading',
                })

                $.ajax({
                    url: `/Comment/GetChildComment`,
                    data: { parentId: parentId, index: index },
                    type: 'GET',
                    success: (response) => {
                        if (response.hasOwnProperty('status') && response.status === 404) {
                            alertWait.close()
                            Swal.fire(
                                'Max Messenge Show',
                                '',
                                'error'
                            )
                        } else {
                            alertWait.close()
                            if (response.length != 5) {
                                showMoreAnswer.style.display = "none"
                            } else {
                                $(showMoreAnswer).attr("data-index", new Number(index) + 1)
                            }
                            // Write Html
                            WriteComentChild(response, $("#editUserId").val().trim(), $("#UserIdentityName").val().trim(), parentLi)
                        }
                    }
                });
            })
        })
    </script>

    @* Child Comment Write Html *@
    <script>
        function WriteComentChild(conments, userId, userName,parentLi) {
            userName = new String(userName).trim();
            let ulComments = document.createElement("ul")
            $(ulComments).attr("class", "list-unstyled p-0 m-0")

            if (userName == null || userName.length == 0) {
                conments.forEach(function (e) {

                    let li = document.createElement("li")
                    li.setAttribute('class', "comment-children");
                    li.setAttribute('id', e.htmlId);
                    let Edate = new Date(e.date)

                    let html =
                        `
                                <div class="comment-avatar">
                                    <img src="~/img/Profile/${e.image}" alt="">
                                </div>
                            `
                    li.innerHTML = html

                    // Comment => Details
                    let commentDetails = document.createElement("div")
                    $(commentDetails).attr("class", "comment-details w-100")

                    let commentDetailHtml =
                        `
                                <h4 class="comment-author parent-coment" data-parent="comment${e.parentId}">${e.userName} => ${e.parentUserName}</h4>
                                    <span>${Edate.getDate()}/${Edate.getMonth()}/${Edate.getFullYear()}</span>
                                    <p>
                                        ${e.comment}
                                    </p>
                            `
                    commentDetails.innerHTML = commentDetailHtml

                    let btnReplay = document.createElement("a")
                    $(btnReplay).attr("class", "replay")
                    $(btnReplay).attr("data-add", "0")
                    $(btnReplay).attr("data-userid", "0")
                    $(btnReplay).attr("data-blog", "0")
                    $(btnReplay).attr("data-commentid", "0")

                    commentDetails.appendChild(btnReplay)
                    li.appendChild(commentDetails)

                    if (e.isChild) {
                        let btnAnswers = document.createElement("button")
                        $(btnAnswers).attr("class", "btn w-100 btn-child my-2 btn-light text-center")
                        $(btnReplay).attr("data-id", e.id)
                        $(btnReplay).attr("data-index", "1")

                        li.appendChild(btnAnswers)
                    }

                    ulComments.push(li)
                })
            } else {


                conments.forEach(function (e) {

                    let li = document.createElement("li")
                    li.setAttribute('class', "comment-children");
                    li.setAttribute('id', e.htmlId);
                    let Edate = new Date(e.date)

                    let html =
                        `
                                <div class="comment-avatar">
                                    <img src="~/img/Profile/${e.image}" alt="">
                                </div>
                            `
                    li.innerHTML = html

                    // Comment => Details
                    let commentDetails = document.createElement("div")
                    $(commentDetails).attr("class", "comment-details w-100")

                    

                    let commentDetailHtml =
                        `
                            <a href="#comment${e.parentId}"><h4 class="comment-author parent-coment" data-parent="comment${e.parentId}">${e.userName} => ${e.parentUserName}</h4></a>
                            <span>${Edate.getDate()}/${Edate.getMonth()}/${Edate.getFullYear()}</span>
                            <p>
                                ${e.comment}
                            </p>
                        `
                    commentDetails.innerHTML = commentDetailHtml

                    let btnCommentName = $(commentDetails.children[0])

                    let parentElemnt = $($(commentDetails.children[0]).attr("href"))

                    btnCommentName.click("click", function (e) {

                        
                        setTimeout(() => {
                            let left = document.documentElement.scrollLeft
                            let top = new Number(document.documentElement.scrollTop) - 100
                            window.scrollTo(left, top)
                        }, 200)

                        parentElemnt.css({ "backgroundColor": "yellow","transition": "all 0.5s ease-in-out"})
                        setTimeout(() => {
                            parentElemnt.css({ "backgroundColor": "white", "transition": "all 0.5s ease-in-out" })
                        },2000)

                    })


                    // Incon More Section
                    let divIconMore = document.createElement("div")
                    $(divIconMore).attr("class", "icon-more")

                    let btnCompanet = document.createElement("button")
                    $(btnCompanet).attr("class","btn bg-transparent border border-1 rounded-circle more-btn")
                    btnCompanet.innerHTML = '<i style="font-size:1.2rem;" class="ti-more-alt"></i>'
                    $(btnCompanet).click(CommentCompanentEventFunction)

                    divIconMore.appendChild(btnCompanet)

                    let divDropDown = document.createElement("div")
                    $(divDropDown).attr("class", "dropdown-menu p-1")
                    if (userName == e.userName) {
                        divDropDown.innerHTML = `
                                <a class="dropdown-item btn-update text-center" href="#" data-toggle="modal" data-target="#UpdatCommentModalCenter" data-id=" ${e.id}"><i class="ti-pencil"></i> Edit</a>
                                <a class="dropdown-item text-danger text-center delete-btn" href="/Comment/Delete/${e.id}"><i class="ti-trash"></i>Delete</a>
                            `
                    } else {
                        divDropDown.innerHTML = ` <a class="dropdown-item text-center" href="#"> <i class="ti-info"></i>Xeber</a>`
                    }
                    divIconMore.appendChild(divDropDown)
                    commentDetails.appendChild(divIconMore)

                    // Replay Section
                    let btnReplay = document.createElement("a")
                    $(btnReplay).attr("class", "replay ")
                    $(btnReplay).attr("data-add", "0")
                    $(btnReplay).attr("data-userid", userId)
                    $(btnReplay).attr("data-blog", e.blogDetailsId)
                    $(btnReplay).attr("data-commentid", e.id)
                    $(btnReplay).text("Replay")
                    $(btnReplay).css("cursor", "pointer");

                    $(btnReplay).click(ReplayComent)


                    commentDetails.appendChild(btnReplay)
                    li.appendChild(commentDetails)

                    if (e.isChild) {
                        let btnAnswers = document.createElement("button")
                        $(btnAnswers).attr("class", "btn w-100 btn-child my-2 btn-light text-center")
                        $(btnAnswers).attr("data-id", e.id)
                        $(btnAnswers).attr("data-index", "1")
                        $(btnAnswers).text("See More Answer")
                        li.appendChild(btnAnswers)
                    }
                    

                    ulComments.appendChild(li)
                })
            }


            let liChildren = document.createElement("li")

            $(liChildren).attr("class","pb-0")
            liChildren.appendChild(ulComments)
            insertAfter(liChildren, parentLi)

        }
    </script>


    @* Replay Comment Function *@
    <script>
        function ReplayComent(x) {
            x.preventDefault();

            let parent = x.target.parentElement
            const elemet = x.target
            let isAdded = elemet.getAttribute("data-add")

            if (isAdded == "0") {
                elemet.setAttribute("data-add", "1")
                let userId = x.target.getAttribute("data-userid")
                let commentId = x.target.getAttribute("data-commentid")
                let blogId = x.target.getAttribute("data-blog")

                let comment = ComentCreate(userId, commentId, blogId)
                parent.appendChild(comment)

                Vaildation(comment)
                let canceled = comment.children[2].children[0]
                // Remove Form
                canceled.addEventListener("click", function (x) {
                    let comment = x.target.parentElement.parentElement
                    RemoveForm(comment)
                    elemet.setAttribute("data-add", "0")
                })

            }
        }
    </script>


    <script>
        function insertAfter(newNode, existingNode) {
            existingNode.parentNode.insertBefore(newNode, existingNode.nextSibling);
        }
    </script>


    <script src="~/Admin/assets/js/popper.min.js"></script>
    <script src="~/Admin/assets/js/bootstrap.min.js"></script>


}