@model BlogVM
@inject Microsoft.AspNetCore.Identity.UserManager<User> userManager;
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@{
    User user = null;
    if (User.Identity.IsAuthenticated)
    {
        user = userManager.Users.FirstOrDefault(x => x.UserName == User.Identity.Name);
    }

    ViewData["Title"] = "Single Page";

}


@section header{

    <style>
        .parent-coment:hover {
            color: #0062d3 !important;
            transition: all 0.3s ease-in;
        }
    </style>

}

<div class="hero hero-single route bg-image" style="background-image: url(/img/overlay-bg.jpg)">
    <div class="overlay-mf"></div>
    <div class="hero-content display-table">
        <div class="table-cell">
            <div class="container">
                <h2 class="hero-title mb-4">@Model.Blog.User.UserName Blog Details</h2>
                <ol class="breadcrumb d-flex justify-content-center">
                    <li class="breadcrumb-item">
                        <a href="/">Home</a>
                    </li>
                    <li class="breadcrumb-item">
                        <a href="#">@Model.Blog.BlogCategory.Name</a>
                    </li>
                    <li class="breadcrumb-item active">@Model.Blog.Title</li>
                </ol>
            </div>
        </div>
    </div>
</div>


<main id="main">

    <!-- ======= Blog Single Section ======= -->
    <section class="blog-wrapper sect-pt4" id="blog">
        <div class="container">
            <div class="row">
                <div class="col-md-8">
                    <div class="post-box">
                        <div class="post-thumb d-flex justify-content-center">
                            <img src="~/img/Blog/@Model.Blog.Image" class="img-fluid" alt="">
                        </div>
                        <div class="post-meta">
                            <h1 class="article-title">@Model.Blog.Title</h1>
                            <ul>
                                <li>
                                    <span class="bi bi-person"></span>
                                    <a href="/Home/Index/@Model.Blog.User.UserName">@Model.Blog.User.FullName</a>
                                </li>
                                <li>
                                    <span class="bi bi-tag"></span>
                                    <a href="#">@Model.Blog.BlogCategory.Name</a>
                                </li>
                                <li>
                                    <span class="bi bi-chat-text"></span>
                                    <a href="#comment">@Model.Commets.Count</a>
                                </li>
                            </ul>
                        </div>
                        <div class="article-content lead-add">
                            @Html.Raw(Model.Blog.BlogDetails.Description)
                        </div>
                    </div>
                    <div id="comment" class="box-comments">
                        <div class="title-box-2">
                            <h4 class="title-comments title-left">Comments (@Model.Commets.Count)</h4>
                        </div>
                        <ul class="list-comments">
                            @if (!User.Identity.IsAuthenticated)
                            {
                                @foreach (var item in Model.Commets.Where(x => x.ParentId == null))
                                {
                                    @Model.ChildCommentHtml.Clear()

                                    <li id="@item.HtmlId">
                                        <div class="comment-avatar">
                                            <img src="~/img/Profile/@item.User.Image" alt="">
                                        </div>
                                        <div class="comment-details">
                                            <h4 class="comment-author">@item.User.FullName</h4>
                                            <span>@item.Date.ToShortDateString()</span>
                                            <p>
                                                @item.Comment
                                            </p>
                                            <a class='replay' data-add='0' data-userid='0' data-commentid='@item.Id' href='#'>Reply</a>
                                        </div>
                                    </li>

                                    if (Model.IsParentComment(item.Id))
                                    {
                                        Model.WriteChildComments(Model.GetParentComments(item.Id));

                                        @Html.Raw(Model.ChildCommentHtml.ToString())
                                    }
                                }

                            }
                            else
                            {
                                @foreach (var item in Model.Commets.Where(x => x.ParentId == null))
                                {
                                    @Model.ChildCommentHtml.Clear()

                                    <li id="@item.HtmlId">
                                        <div class="comment-avatar">
                                            <img src="~/img/Profile/@item.User.Image" alt="">
                                        </div>
                                        <div class="comment-details">
                                            <h4 class="comment-author">@item.User.FullName</h4>
                                            <span>@item.Date.ToShortDateString()</span>
                                            <p>
                                                @item.Comment
                                            </p>
                                            <a class='replay' data-add='0' data-userid='@user.Id' data-commentid='@item.Id' href='#'>Reply</a>
                                        </div>
                                    </li>

                                    if (Model.IsParentComment(item.Id))
                                    {
                                        Model.WriteChildComments(Model.GetParentComments(item.Id), user);

                                        @Html.Raw(Model.ChildCommentHtml.ToString())

                                    }

                                }

                            }
                        </ul>
                    </div>
                    <div class="form-comments">
                        <div class="title-box-2">
                            <h3 class="title-left">
                                Leave a Reply
                            </h3>
                        </div>

                        @if (User.Identity.IsAuthenticated)
                        {
                            <form class="form-mf comment-leave" action="/Assistant/Comment" method="post">
                                <div class="row">
                                    <div class="mb-3">
                                        <div class="form-group">
                                            <textarea id="textMessage" class="form-control input-mf" placeholder="Comment *" name="message" cols="45" rows="8" required></textarea>
                                            <input type="hidden" name="userId" value="@user.Id">
                                            <input type="hidden" name="blogId" value="@Model.Blog.Id">
                                        </div>
                                    </div>
                                    <span class="text-danger mb-3 danger"></span>
                                    <div class="col-md-12">
                                        <button type="submit" class="button button-a button-big button-rouded">Send Message</button>
                                    </div>
                                </div>
                            </form>
                        }
                        else
                        {
                            <form class="form-mf comment-leave">
                                <div class="row">
                                    <div class="mb-3">
                                        <div class="form-group">
                                            <textarea id="textMessage" class="form-control input-mf" placeholder="Comment *" name="message" cols="45" rows="8" required></textarea>
                                            <input type="hidden" name="userId" value="0">
                                            <input type="hidden" name="commetId" value="0">
                                        </div>
                                    </div>
                                    <span class="text-danger mb-3 danger"></span>
                                    <div class="col-md-12">
                                        <button type="submit" class="button button-a button-big button-rouded">Send Message</button>
                                    </div>
                                </div>
                            </form>
                        }


                    </div>
                </div>
                <div class="col-md-4">
                    <div class="widget-sidebar sidebar-search">
                        <h5 class="sidebar-title">Search in @Model.Blog.User.UserName</h5>
                        <div class="sidebar-content">
                            <form method="post" asp-action="Search" asp-controller="Assistant">
                                <div class="input-group">
                                    <input type="text" class="form-control" name="info" placeholder="Search for..." aria-label="Search for...">
                                    <input type="checkbox"
                                           style="width:0;height:0;visibility:hidden;"
                                           name="isAll"
                                           value="@false.ToString()" />
                                    <input type="hidden" name="userName" value="@Model.Blog.User.UserName" />
                                    <span class="input-group-btn">
                                        <button class="btn btn-secondary btn-search" type="submit">
                                            <span class="bi bi-search"></span>
                                        </button>
                                    </span>
                                </div>
                            </form>
                        </div>
                    </div>
                    <div class="widget-sidebar">
                        <h5 class="sidebar-title">Recent Post in @Model.Blog.User.UserName</h5>
                        <div class="sidebar-content">
                            <ul class="list-sidebar">

                                @foreach (var item in Model.Blogs.Take(3))
                                {
                                    <li>
                                        <a href="/Home/SinglePage/@item.Id">
                                            @if (item.Title.Length > 50)
                                            {
                                                <span>
                                                    @item.Title.Substring(0, 50) ...
                                                </span>
                                            }
                                            else
                                            {
                                                <span>
                                                    @item.Title
                                                </span>
                                            }

                                        </a>
                                    </li>
                                }
                            </ul>
                        </div>
                    </div>
                    <div class="widget-sidebar">
                        <h5 class="sidebar-title">Archives in @Model.Blog.User.UserName</h5>
                        <div class="sidebar-content">

                            @if (Model.Blogs.Count > 3)
                            {
                                <ul class="list-sidebar">
                                    @for (int i = 3; i < Model.Blogs.Count; i++)
                                    {
                                        <li>
                                            <a href="/Home/SinglePage/@Model.Blogs[i].Id">
                                                @if (Model.Blogs[i].Title.Length > 50)
                                                {
                                                    <span>
                                                        @Model.Blogs[i].Title.Substring(0, 50) ...
                                                    </span>
                                                }
                                                else
                                                {
                                                    <span>
                                                        @Model.Blogs[i].Title
                                                    </span>
                                                }

                                            </a>
                                        </li>
                                    }
                                </ul>
                                <a class="btn mt-3 d-block btn-primary" href="/Assistant/SeeArchives/@Model.Blog.Id">See All</a>
                            }
                            else
                            {
                                <ul class="list-sidebar">
                                    <li>
                                        Not yet Archived
                                    </li>
                                </ul>
                            }

                        </div>
                    </div>
                    <div class="widget-sidebar widget-tags">
                        <h5 class="sidebar-title">Tags</h5>
                        <div class="sidebar-content">
                            <ul>
                                @foreach (var item in Model.Tags)
                                {
                                    <li>
                                        <a href="/Assistant/TagBlogs/@item.Id">@item.Name</a>
                                    </li>
                                }
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section><!-- End Blog Single Section -->

</main><!-- End #main -->


@section script{

    <script>

        $(document).ready(function () {
            document.querySelectorAll(".comment-children .parent-coment").forEach(function (e) {

                e.addEventListener("mouseenter", function (x) {
                    let parent = document.getElementById(x.target.getAttribute("data-parent"))
                    parent.style.backgroundColor = "yellow"

                    $(parent).css({ backgroundColor: "#E3E300", transition: "all 0.3s ease-in" })
                })

                e.addEventListener("mouseleave", function (x) {
                    let parent = document.getElementById(x.target.getAttribute("data-parent"))
                    parent.style.backgroundColor = "white"
                })

            })
        })

        document.querySelectorAll(".replay").forEach(function (e) {

            e.addEventListener("click", function (x) {
                x.preventDefault();

                let parent = x.target.parentElement
                const elemet = x.target
                let isAdded = elemet.getAttribute("data-add")

                if (isAdded == "0") {
                    elemet.setAttribute("data-add", "1")
                    let userId = x.target.getAttribute("data-userid")
                    let commentId = x.target.getAttribute("data-commentid")
                    parent.appendChild(ComentCreate(userId, commentId))

                    CommentValidation(parent)

                    // Remove Form
                    document.querySelectorAll(".canceled").forEach(function (e) {
                        e.addEventListener("click", function (x) {
                            let comment = x.target.parentElement.parentElement
                            RemoveForm(comment)
                            elemet.setAttribute("data-add", "0")
                        })

                    })
                }
            })
        })

        function ComentCreate(userId, comment) {
            let form = document.createElement("form")
            form.setAttribute("class", "d-block mt-3")
            form.setAttribute("method", "post")
            form.setAttribute("action", "/Assistant/Comment")

            let html = `
                                                              <div class="mb-3">
                                                                <div class="form-group">
                                                                  <textarea id="textMessage" class="form-control input-mf" placeholder="Comment *" name="message" cols="45" rows="8" required></textarea>
                                                                  <input type="hidden" name="userId" value="%user">
                                                                  <input type="hidden" name="commetId" value="%coment">
                                                                  <span class="text-danger"></span>
                                                                </div>
                                                              </div>
                                                              <div class="d-inline-block mt-2" >
                                                                  <button type="submit" class="button button-a button-rouded">Send Message</button>
                                                              </div>
                                                              <div class="d-inline-block mt-2">
                                                                  <button type="button" class="button canceled button-a button-rouded">Cancel</button>
                                                              </div>
                                                        `
            html = html.replace("%user", userId)
            html = html.replace("%coment", comment)
            form.innerHTML = html
            return form
        }

        function RemoveForm(comment) {
            let parent = comment.parentElement
            try {
                parent.removeChild(comment)
            } catch (e) {

            }
        }



        function CommentValidation(parent) {

            for (let i = 0; i < parent.children.length; i++) {
                if (parent.children[i].tagName == "FORM") {
                    let form = parent.children[i]
                    form.addEventListener("submit", function (x) {

                        const div = x.target.children[0].children[0]

                        let textarea = div.children[0].value.trim()
                        let user = div.children[1].value
                        if (!textarea || textarea == undefined || textarea == "" || textarea.length == 0) {
                            x.preventDefault()
                            div.children[3].innerText = "Please Comment Add"
                        }

                        if (user == 0) {
                            x.preventDefault()
                            div.children[3].innerText = "Please Sign In Or Sign Up"
                        }
                    })
                }
            }

        }
    </script>

    <script>
        document.querySelector(".comment-leave").addEventListener("submit", function (e) {
            const div = e.target.children[0].children[0].children[0]
            let textarea = div.children[0].value.trim()
            let user = div.children[1].value
            let errorText = document.querySelector(".danger")
            if (!textarea || textarea == undefined || textarea == "" || textarea.length == 0) {
                e.preventDefault()
                errorText.innerHTML = "Please Comment Add"
            }

            if (user == 0) {
                e.preventDefault()
                errorText.innerHTML = "Please Sign In Or Sign Up"
            }

        })
    </script>

    <script>
        $(document).ready(function () {
            $(".lead-add").each(function () {
                $(this).children("p").addClass("lead")
            })
        })
    </script>
}